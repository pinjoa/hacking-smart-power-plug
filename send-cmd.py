#!/bin/python3
import socket
import argparse

# smart plower plug ip address
default_ip_address: str = '192.168.177.118'  
# smart plower plug port number
default_port: int = 6668  
# default command to execute
default_cmd: str = 'on'  

# information collected from Wireshark
# packet state to on 
packet_bytes_on = bytes([
    0x00, 0x00, 0x55, 0xaa, 0x00, 0x00, 0x06, 0x96,
    0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x37,
    0x33, 0x2e, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x09, 0x00, 0x0e, 0xf6, 0xc3, 0xe5,
    0x30, 0x3f, 0xa8, 0x4f, 0x54, 0xb3, 0xd9, 0x67,
    0xdb, 0x70, 0x20, 0xee, 0x17, 0xa0, 0x67, 0xa6,
    0x58, 0x11, 0xb6, 0x8d, 0x9f, 0x63, 0x3a, 0xfd,
    0x52, 0x3e, 0x3f, 0x12, 0xd0, 0x15, 0x83, 0x63,
    0x0f, 0x48, 0x4a, 0x00, 0x00, 0xaa, 0x55
  ])
# packet state to off 
packet_bytes_off = bytes([
    0x00, 0x00, 0x55, 0xaa, 0x00, 0x00, 0x06, 0x97,
    0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x37,
    0x33, 0x2e, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0a, 0x00, 0x0e, 0xf6, 0xc3, 0x4c,
    0x49, 0x8f, 0x17, 0xd6, 0xcb, 0xa2, 0x2d, 0x55,
    0xc9, 0x47, 0xa2, 0xd5, 0x22, 0x50, 0xa7, 0xf6,
    0x7b, 0x5a, 0x3c, 0xe3, 0x52, 0x45, 0x38, 0x85,
    0x46, 0xc7, 0xc7, 0x6b, 0x0d, 0x35, 0xd4, 0x5f,
    0x9c, 0x65, 0x5e, 0x00, 0x00, 0xaa, 0x55
  ])


# send command...
def send_command(pdata: bytes, pipaddress: str, pport: int):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
        sock.connect((pipaddress, pport))
        sock.sendall(pdata)
        print(f"Command sent to {pipaddress}:{pport}: {pdata.hex()}")


# program logic
parser = argparse.ArgumentParser()
parser.add_argument('-i', '--ipaddress', type=str, help="Define IP address", default=default_ip_address)
parser.add_argument('-p', '--port', type=int, help="Define TCP port", default=default_port)
parser.add_argument('-c', '--cmd', type=str, help="Define command to run: on|off", default=default_cmd)
args = parser.parse_args()
ipaddress: str = args.ipaddress
port: int = args.port
cmd: str = args.cmd.lower()

if cmd == 'on':
    send_command(packet_bytes_on, ipaddress, port)
elif cmd == 'off':
    send_command(packet_bytes_off, ipaddress, port)
else:
    print(f"Wrong command: {cmd}")
